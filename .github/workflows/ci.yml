# Test miniChRIS-k8s with miniChRIS-docker's test suite

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-podman:
    runs-on: ubuntu-22.04
    steps:
        # Pre-installed Podman version is version 3, we need to install version 4.
        # https://podman.io/getting-started/installation#ubuntu
      - name: Install latest Podman
        run: |
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key \
            | gpg --dearmor \
            | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg]\
              https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /" \
            | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
          sudo apt-get update
          sudo apt-get -y install podman
      - name: Podman Info
        run: podman info
      - name: Checkout
        uses: actions/checkout@v3
      - name: Start CUBE
        run: ./podman/minichris.sh up

      - name: Checkout miniChRIS-docker
        uses: actions/checkout@v3
        with:
          repository: FNNDSC/miniChRIS-docker
          path: ./miniChRIS-docker
      - name: Test
        run: |
          set +e
          ./miniChRIS-docker/test.sh
          rc=$?
          
          # if tests fail, print out all logs
          if [ "$rc" != '0' ]; then
            set -x
            for c in $(podman ps -a --format '{{ .Names }}' --filter 'name=minichris'); do
              podman logs $c
            done
          fi

          exit $rc
      - name: Stop CUBE
        run: ./podman/minichris.sh down
